# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-31 07:21
from __future__ import unicode_literals

import apps.content.models_bases.content
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import redactor.fields
import tagging.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(help_text="Used to build the category's URL.", max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='content.Category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['title'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Full title of the Content Entry', max_length=255, verbose_name='title')),
                ('slug', models.SlugField(help_text="Used to build the Content entry's URL.", max_length=255, unique_for_date='publication_date', verbose_name='slug')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Published', 'Published'), ('Trashed', 'Trashed'), ('Hidden', 'Hidden'), ('Archived', 'Archived')], db_index=True, default='Draft', max_length=20, verbose_name='status')),
                ('publication_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text="Used to build the entry's URL.", verbose_name='publication date')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='update at')),
                ('content', redactor.fields.RedactorField(help_text='Full Description of the Content')),
                ('image', models.ImageField(blank=True, help_text='Featured Image for the Content', upload_to=apps.content.models_bases.content.image_upload_to, verbose_name='image')),
                ('image_caption', models.TextField(blank=True, help_text="Image's caption.", verbose_name='caption')),
                ('image_source', models.TextField(blank=True, null=True)),
                ('tags', tagging.fields.TagField(blank=True, max_length=255, verbose_name='tags')),
                ('content_source', redactor.fields.RedactorField(blank=True, help_text='Reference and the source of the content', null=True)),
                ('visit_count', models.IntegerField(default=0)),
                ('categories', models.ManyToManyField(blank=True, related_name='entries', to='content.Category', verbose_name='categories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Content Entry',
                'verbose_name_plural': 'Content Entries',
                'ordering': ['-publication_date'],
                'get_latest_by': 'publication_date',
                'abstract': False,
            },
        ),
        migrations.AlterIndexTogether(
            name='contententry',
            index_together=set([('status', 'publication_date'), ('slug', 'publication_date')]),
        ),
    ]
